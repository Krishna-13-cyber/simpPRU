[1mdiff --git a/src/console/console.cpp b/src/console/console.cpp[m
[1mindex 6c3bb23..1af11e8 100644[m
[1m--- a/src/console/console.cpp[m
[1m+++ b/src/console/console.cpp[m
[36m@@ -12,7 +12,7 @@[m [mstd::mutex output_box_mutex;[m
 std::atomic_bool stop_read_signal(false);[m
 std::atomic_bool update_screen(false);[m
 FILE *fd = NULL;[m
[31m-int k = 0;[m
[32m+[m[32mint status[4] = {0, 0, 0, 0};[m
 [m
 int device_model()[m
 {[m
[36m@@ -180,19 +180,11 @@[m [mint start_pru(int pru_id)[m
     char state[20] = " ";[m
     int bits_read = read(remoteproc_start, state, sizeof(char)*7);[m
 [m
[31m-    if (!strcmp(state, "offline") && bits_read > 0)[m
[31m-    {[m
[31m-        k = 0;[m
[31m-    }[m
[31m-    else[m
[31m-    {[m
[31m-        k = 1;[m
[31m-    }[m
     if (!strcmp(state, "offline") && bits_read > 0)[m
     {[m
         if (write(remoteproc_start, "start", 6*sizeof(char)) > 0)[m
         {[m
[31m-            k = 1;[m
[32m+[m[32m            status[pru_id] = 1;[m
             close(remoteproc_start);[m
             return 1;[m
         }[m
[36m@@ -237,19 +229,11 @@[m [mint stop_pru(int pru_id)[m
     char state[20] = " ";[m
     int bits_read = read(remoteproc_stop, state, sizeof(char)*7);[m
 [m
[31m-    if (!strcmp(state, "running") && bits_read > 0)[m
[31m-    {[m
[31m-        k = 1;[m
[31m-    }[m
[31m-    else[m
[31m-    {[m
[31m-        k = 0;[m
[31m-    }[m
     if (!strcmp(state, "running") && bits_read > 0)[m
     {[m
         if (write(remoteproc_stop, "stop", 5*sizeof(char)) > 0)[m
         {[m
[31m-            k = 0;[m
[32m+[m[32m            status[pru_id] = 0;[m
             close(remoteproc_stop);[m
             return 1;[m
         }[m
[36m@@ -271,8 +255,8 @@[m [musing namespace ftxui;[m
 console::console() [m
 {[m
     auto container = Container::Vertical({[m
[31m-      pru_id_menu,[m
       button,[m
[32m+[m[32m      pru_id_menu,[m
       Container::Horizontal({[m
         input_box,[m
         pru_start_top,[m
[36m@@ -344,7 +328,7 @@[m [mElement console::Render()[m
 {[m
     std::lock_guard<std::mutex> output_box_lock(output_box_mutex);[m
 [m
[31m-    if (k == 1)[m
[32m+[m[32m    if (status[pru_id] == 1)[m
         return border(vbox({[m
             // Console, PRU selection and PRU-Status Auto-toggle button[m
             hbox({[m
[36m@@ -355,11 +339,9 @@[m [mElement console::Render()[m
                     }) | frame,                                        [m
                 }) | flex | border,[m
                 vbox({[m
[31m-                    hcenter(bold(text(L"PRU"))),[m
[32m+[m[32m                    button->Render() | bold | color(Color::Green),[m
                     separator(),[m
                     pru_id_menu->Render(),[m
[31m-                    separator(),[m
[31m-                    button->Render() | bold | color(Color::Green),[m
                 }) | border,[m
             }) | flex,[m
             [m
[36m@@ -384,11 +366,9 @@[m [mElement console::Render()[m
                     }) | frame,                                        [m
                 }) | flex | border,[m
                 vbox({[m
[31m-                    hcenter(bold(text(L"PRU"))),[m
[32m+[m[32m                    button->Render() | bold | color(Color::Red),[m
                     separator(),[m
                     pru_id_menu->Render(),[m
[31m-                    separator(),[m
[31m-                    button->Render() | bold | color(Color::Red),[m
                 }) | border,[m
             }) | flex,[m
             [m
[36m@@ -435,4 +415,4 @@[m [mint main(int argc, const char* argv[])[m
     });[m
 [m
     screen.Loop(ftxui::Make<console>());[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
